// Explodium Gun projectiles and effects

Class ExplodiumCasing : SWWMCasing {}

Class ExplodiumMag : SWWMCasing
{
	Default
	{
		Mass 10;
		BounceFactor 0.4;
		WallBounceFactor 0.4;
		BounceSound "explodium/mag";
	}
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		heat = 0;
	}
	States
	{
	Death:
		XZW1 BC -1
		{
			pitch = roll = 0;
			angle = FRandom[Junk](0,360);
			frame = RandomPick[Junk](1,2);
		}
		Stop;
	}
}

Class ExplodiumMagArm : Actor
{
	Default
	{
		Obituary "$O_EXPLODIUM";
		PROJECTILE;
		+THRUACTORS;
		+BOUNCEONWALLS;
		+BOUNCEONFLOORS;
		+BOUNCEONCEILINGS;
		+NODAMAGETHRUST;
		+FORCERADIUSDMG;
		-NOGRAVITY;
		Gravity 0.35;
		BounceFactor 1.0;
		Radius 4;
		Height 4;
	}
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		reactiontime = Random[ExploS](10,15);
		double ang, pt;
		ang = FRandom[ExploS](0,360);
		pt = FRandom[ExploS](-90,90);
		vel = (cos(ang)*cos(pt),sin(ang)*cos(pt),-sin(pt))*FRandom[ExploS](8.,20.);
	}
	States
	{
	Spawn:
		TNT1 A 1
		{
			Spawn("ExplodiumMagTrail",pos);
			if ( !(ReactionTime%2) )
				SWWMUtility.DoExplosion(self,2+reactiontime/2,3000+500*reactiontime,40+3*reactiontime,20);
			Vector3 pvel = (FRandom[ExploS](-1,1),FRandom[ExploS](-1,1),FRandom[ExploS](-1,1)).unit()*FRandom[ExploS](1,5);
			let s = Spawn("SWWMHalfSmoke",pos);
			s.vel = pvel+vel*.2;
			s.SetShade(Color(1,1,1)*Random[ExploS](64,224));
			s.special1 = Random[ExploS](1,3);
			s.scale *= 2.4;
			s.alpha *= 0.1+.4*(ReactionTime/15.);
			A_CountDown();
		}
		Wait;
	}
}

Class ExplodiumMagTrail : Actor
{
	Default
	{
		RenderStyle "Add";
		+NOBLOCKMAP;
		+NOGRAVITY;
		+FORCEXYBILLBOARD;
		+NOTELEPORT;
		+NOINTERACTION;
		Scale 1.1;
	}
	override void Tick()
	{
		if ( isFrozen() ) return;
		if ( !CheckNoDelay() || (tics == -1) ) return;
		if ( tics > 0 ) tics--;
		while ( !tics )
		{
			if ( !SetState(CurState.NextState) )
				return;
		}
	}
	States
	{
	Spawn:
		XEX1 ADGJMPSVY\ 1 Bright;
		Stop;
	}
}

Class ExplodiumMagProj : Actor
{
	double pitchvel, anglevel;
	Vector3 cvel;

	Default
	{
		Obituary "$O_EXPLODIUM";
		DamageType "Explodium";
		Radius 4;
		Height 4;
		Gravity 0.5;
		Speed 30;
		PROJECTILE;
		-NOGRAVITY;
		+ROLLSPRITE;
		+ROLLCENTER;
		+INTERPOLATEANGLES;
		+NODAMAGETHRUST;
		+FORCERADIUSDMG;
		+FORCEXYBILLBOARD;
	}
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		pitchvel = FRandom[Junk](10,30)*RandomPick[Junk](-1,1);
		anglevel = FRandom[Junk](10,30)*RandomPick[Junk](-1,1);
	}
	void A_BlowUp()
	{
		angle = atan2(cvel.y,cvel.x);
		pitch = asin(-cvel.z);
		bNOGRAVITY = true;
		A_SetRenderStyle(1.,STYLE_Add);
		Scale *= 2.+.2*special1;
		A_AlertMonsters(swwm_uncapalert?0:6000);
		SWWMUtility.DoExplosion(self,10+20*special1,80000+8000*special1,90+10*special1,60,DE_EXTRAZTHRUST);
		A_QuakeEx(9,9,9,30,0,400+80*special1,"",QF_RELATIVE|QF_SCALEDOWN,falloff:300,rollintensity:2.);
		A_StartSound("explodium/maghit",CHAN_VOICE,attenuation:.35);
		A_StartSound("explodium/maghit",CHAN_WEAPON,attenuation:.2);
		A_SprayDecal("BigRocketBlast",172);
		Scale *= FRandom[ExploS](0.8,1.1);
		Scale.x *= RandomPick[ExploS](-1,1);
		Scale.y *= RandomPick[ExploS](-1,1);
		int numpt = Random[ExploS](16,32);
		for ( int i=0; i<numpt; i++ )
		{
			Vector3 pvel = (FRandom[ExploS](-1,1),FRandom[ExploS](-1,1),FRandom[ExploS](-1,1)).unit()*FRandom[ExploS](1,6);
			let s = Spawn("SWWMSmoke",pos);
			s.vel = pvel;
			s.SetShade(Color(1,1,1)*Random[ExploS](64,224));
			s.special1 = Random[ExploS](1,4);
			s.scale *= 2.8;
			s.alpha *= .4;
		}
		numpt = Random[ExploS](10,20);
		for ( int i=0; i<numpt; i++ )
		{
			Vector3 pvel = (FRandom[ExploS](-1,1),FRandom[ExploS](-1,1),FRandom[ExploS](-1,1)).unit()*FRandom[ExploS](2,12);
			let s = Spawn("SWWMSpark",pos);
			s.vel = pvel;
		}
		numpt = Random[ExploS](20,30);
		for ( int i=0; i<numpt; i++ )
		{
			Vector3 pvel = (FRandom[ExploS](-1,1),FRandom[ExploS](-1,1),FRandom[ExploS](-1,1)).unit()*FRandom[ExploS](2,24);
			let s = Spawn("SWWMChip",pos);
			s.vel = pvel;
		}
		numpt = int(Random[ExploS](3,5)*(1.+.4*special1));
		for ( int i=0; i<numpt; i++ )
		{
			let s = Spawn("ExplodiumMagArm",pos);
			s.target = target;
		}
		Spawn("ExploLight2",pos);
		if ( swwm_omnibust ) BusterWall.ProjectileBust(self,20+15*special1,cvel);
	}
	States
	{
	Spawn:
		XZW1 A 1
		{
			pitch += pitchvel;
			angle += anglevel;
			if ( vel.length() > 0. ) cvel = vel.unit();
		}
		Wait;
	Death:
		TNT1 A 0 A_BlowUp();
		XEX1 ABCDEFGHIJKLMNOPQRSTUVWXYZ[\] 1 Bright;
		Stop;
	}
}

Class ExploLight : PaletteLight
{
	Default
	{
		ReactionTime 15;
	}
}
Class ExploLight2 : PaletteLight
{
	Default
	{
		ReactionTime 30;
		Args 0,0,0,120;
	}
}

Class ExplodiumBulletImpact : Actor
{
	Default
	{
		Obituary "$O_EXPLODIUM";
		DamageType "Explodium";
		RenderStyle "Add";
		Radius .1;
		Height 0.;
		Scale 1.2;
		+NOGRAVITY;
		+NOBLOCKMAP;
		+NODAMAGETHRUST;
		+FORCERADIUSDMG;
		+FORCEXYBILLBOARD;
		+NOTELEPORT;
		+NOINTERACTION;
	}
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		A_AlertMonsters(swwm_uncapalert?0:3000);
		SWWMUtility.DoExplosion(self,20,80000,90,40,DE_EXTRAZTHRUST);
		A_QuakeEx(4,4,4,10,0,250,"",QF_RELATIVE|QF_SCALEDOWN,falloff:150,rollintensity:0.2);
		A_StartSound("explodium/hit",CHAN_VOICE,attenuation:.6);
		A_StartSound("explodium/hit",CHAN_WEAPON,attenuation:.3);
		A_SprayDecal("RocketBlast",-172);
		Scale *= FRandom[ExploS](0.8,1.1);
		Scale.x *= RandomPick[ExploS](-1,1);
		Scale.y *= RandomPick[ExploS](-1,1);
		int numpt = Random[ExploS](10,20);
		for ( int i=0; i<numpt; i++ )
		{
			Vector3 pvel = (FRandom[ExploS](-1,1),FRandom[ExploS](-1,1),FRandom[ExploS](-1,1)).unit()*FRandom[ExploS](1,3);
			let s = Spawn("SWWMSmoke",pos);
			s.vel = pvel;
			s.SetShade(Color(1,1,1)*Random[ExploS](64,224));
			s.special1 = Random[ExploS](1,2);
			s.scale *= 2.4;
			s.alpha *= .4;
		}
		numpt = Random[ExploS](8,12);
		for ( int i=0; i<numpt; i++ )
		{
			Vector3 pvel = (FRandom[ExploS](-1,1),FRandom[ExploS](-1,1),FRandom[ExploS](-1,1)).unit()*FRandom[ExploS](2,6);
			let s = Spawn("SWWMSpark",pos);
			s.vel = pvel;
		}
		numpt = Random[ExploS](6,16);
		for ( int i=0; i<numpt; i++ )
		{
			Vector3 pvel = (FRandom[ExploS](-1,1),FRandom[ExploS](-1,1),FRandom[ExploS](-1,1)).unit()*FRandom[ExploS](2,12);
			let s = Spawn("SWWMChip",pos);
			s.vel = pvel;
		}
		Spawn("ExploLight",pos);
	}
	override void Tick()
	{
		if ( isFrozen() ) return;
		if ( !CheckNoDelay() || (tics == -1) ) return;
		if ( tics > 0 ) tics--;
		while ( !tics )
		{
			if ( !SetState(CurState.NextState) )
				return;
		}
	}
	States
	{
	Spawn:
		XEX1 ACEGIKMOQSUWY[] 1 Bright;
		Stop;
	}
}
