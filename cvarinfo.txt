// main mod cvars
user string swwm_voicetype = "default";		// voice for your demolitionist
//user color swwm_tagcolor = "40 FF 00";	// color of your model tags, not available due to engine dickery
user float swwm_flashstrength = 1.0;		// strength of screen flashes
user int swwm_hudmargin = 10;			// margin around fullscreen hud elements
user int swwm_maxshown = 4;			// max messages to show normally
user int swwm_maxshownbig = 10;			// max messages to show when chatting
user int swwm_maxpickup = 5;			// total pickup messages visible
user int swwm_mutevoice = 0;			// mute demolitionist voice
						// 0 - none
						// 1 - combat comments
						// 2 - item/secret comments
						// 3 - map start comment
						// 4 - pain/death and grunts
user int swwm_chatduration = 25;		// lifespan of chat messages
user int swwm_msgduration = 5;			// lifespan of other messages
user int swwm_pickduration = 3;			// lifespan of pickup messages
server bool swwm_sharekeys = true;		// share keys in mp
user noarchive int swwm_lasttab = 0;		// last selected tab in the menu
user noarchive int swwm_lastloretab = 0;	// last selected tab in the library submenu
user noarchive int swwm_laststattab = 0;	// last selected tab in the stats submenu
user bool swwm_autousearmor = true;		// automatically use armor items when possible
user bool swwm_autousehealth = true;		// automatically use health items when possible
user bool swwm_autouseammo = true;		// automatically use ammo fabricators when possible (excl. tier 4)
server int swwm_enforceautousearmor = 0;	// 1: server enforces auto use, -1: server enforces no auto use, 0: server respects user setting
server int swwm_enforceautousehealth = 0;	// likewise for health
server int swwm_enforceautouseammo = 0;		// likewise for fabricators
user bool swwm_targeter = true;			// show targeter healthbars
user bool swwm_targettags = true;		// show enemy tags above healthbars
user bool swwm_healthnums = true;		// show damage/healing numbers
user bool swwm_scorenums = true;		// show score numbers
user bool swwm_scorebonus = true;		// show score bonuses
user bool swwm_pois = true;			// show points of interest highlighted by omnisight
user bool swwm_fly6dof = false;			// flying uses 6dof movement, toggleable for those who get motion sickness
user bool swwm_othervoice = true;		// can hear other player's voice lines in coop
user bool swwm_shaders = true;			// use pp shaders for some effects
user bool swwm_earbuster = false;		// limits loudness of wallbuster fire sounds
server bool swwm_revive = true;			// allows the player to do an "emergency reboot" when dying
server int swwm_revivecooldown = 60;		// cooldown after using a revive, in seconds (0: no limit)
user bool swwm_interart = true;			// show fanart on intermissions
server bool swwm_balluse = true;		// lead ball can "press" switches remotely
user bool swwm_bosshealthbars = true;		// display large healthbars for vanilla boss encounters
server bool swwm_upgradebosses = true;		// vanilla bosses will be "upgraded" to be less insta-die prone
server bool swwm_extraalert = false;		// enables A_AlertMonsters calls for certain things which may be cpu-heavy
user bool swwm_accdamage = false;		// damage within the same tic is grouped into a single damage number
user int swwm_maxtargetdist = 2000;		// maximum distance for target healthbars to be updated
user int swwm_maxtargets = 40;			// maximum targeter healthbars to display (0 = unlimited)
user int swwm_maxscorenums = 0;			// maximum score numbers to display (0 = unlimited)
user int swwm_maxdamnums = 0;			// maximum damage/healing numbers to display (0 = unlimited)
user int swwm_hudscale = 0;			// HUD scaling (0 = use GZDoom scaling)
user int swwm_barscale = 2;			// target healthbar scaling (0 = use GZDoom scaling)
user int swwm_scrscale = 2;			// score scaling (0 = use GZDoom scaling)
user int swwm_numscale = 3;			// damnum scaling (0 = use GZDoom scaling)
user int swwm_poiscale = 1;			// point of interest scaling (0 = use GZDoom scaling)
user int swwm_detscale = 2;			// item sense scaling (0 = use GZDoom scaling)
server bool swwm_blood = false;			// custom blood/gibbing
server int swwm_maxblood = 400;			// max blood effects at any time
server int swwm_maxgibs = 100;			// max gibs at any time
server int swwm_maxcasings = 200;		// max casings and spent mags at any time
server int swwm_maxdebris = 500;		// max chunks of debris at any time
user bool swwm_fuzz = true;			// allows toggling the fuzz shader on the demolitionist menus, useful if you're streaming/recording since it destroys the encoding quality
user bool swwm_cbtpause = true;			// wallbuster menu pauses the game
user noarchive int swwm_cbtlast = 0;		// last selected ammo for the wallbuster
server bool swwm_cbtall = false;		// wallbuster breaks any wall, not just movable ones
server bool swwm_doomfall = false;		// monsters take fall damage outside of hexen
server bool swwm_capmcrange = false;		// cap ynykron chain reaction range
server bool swwm_resetscore = true;		// reset score back to 0 on pistol starts
server bool swwm_notrack = false;		// disables all combat tracking (useful to speed up slaughterwads)
server bool swwm_ynykronalert = false;		// caps ynykron alert (so it doesn't wake everyone up)
user bool swwm_menupause = true;		// pause the game when demolitionist menu is open
server noarchive bool swwm_debugblast = false;	// debug visual aid for DoExplosion
user bool swwm_funtags = false;			// replace vanilla monster names with silly ones
server bool swwm_omnibust = false;		// TODO add wallbusting effect to all weapons
server bool swwm_superfuel = false;		// TODO enable unlimited fuel
server bool swwm_partytime = false;		// TODO killed enemies burst into confetti
server bool swwm_simplefog = false;		// simplified teleport fogs (useful to speed up slaughterwads)
user bool swwm_bigtags = false;			// use a bigger font for targeter tags
user bool swwm_intermusic = false;		// use original intermission music
server int swwm_enemydrops = 0;			// allow enemies to drop ammo and weapons (-1 - no ammo or weapons, 0 - ammo only, 1 - both)
server bool swwm_shotgib = true;		// buckshot can gib (some people don't like this for some reason, so it's an option now)
user bool swwm_collectanim = true;		// player special gestures for collectables (first person only)
user bool swwm_collectanimkey = true;		// same but for key items
server int swwm_shadows = 1;			// enables blob shadows under certain things (0 - no shadows, 1 - mod objects, 2 - everything)
user bool swwm_precisecrosshair = true;		// use mod's own, more precise crosshair
user bool swwm_ldspoil = false;			// [LD] always shows "Legendary" prefix on Legendary monsters, otherwise only when they've transformed
user bool swwm_camhud = false;			// keep full hud visible when operating cameras, otherwise only shows messages
user bool swwm_rageshader = false;		// alternate ragekit shader for people with photosensitivity
server bool swwm_uncapalert = false;		// all noise alerts have infinite range
user int swwm_damagetarget = 1;			// conditional healthbar hiding (1 - hide until damage is first taken, 2 - hide if at full health)
server int swwm_strictuntouchable = 0;		// untouchable bonus ends... (1 - even if your armor absorbed all the damage, 2 - if you get hit by anything PERIOD)
server int swwm_silencemap = 0;			// silences the map when all kills/items/secrets are achieved (2 - play calm music)
user int swwm_shadowdist = 2000;		// max distance beyond which blob shadows are no longer rendered, helps performance
server bool swwm_swapweapons = true;		// [DLC1] allows carrying only one weapon in each slot (excluding starter melee and pistol)
user int swwm_forcestats = 0;			// always shows level stats on the HUD, not just when the automap is open (2 - also show map name, otherwise only stats)

// TODO selection order array of weapons, for user tweaking
// if empty, use default selection order defined in zscript
user String swwm_weaponorder = "";

server noarchive bool swwm_iseriouslywanttoplaythiswithbd = false;	// self-explanatory

// cross-session achievement cvars (0: locked, 1: unlocked, 2: notified)
nosave int swwm_achievement_gcsandwich = 0;
nosave int swwm_achievement_hdoom = 0;
nosave int swwm_achievement_onestanding = 0;
nosave int swwm_achievement_oopsie = 0;
nosave int swwm_achievement_ghost = 0;
nosave int swwm_achievement_clonk = 0;
nosave int swwm_achievement_allitems = 0;
nosave int swwm_achievement_conga = 0;
nosave int swwm_achievement_explogun = 0;
nosave int swwm_achievement_gravity = 0;
nosave int swwm_achievement_flight = 0;
nosave int swwm_achievement_cliffyb = 0;
nosave int swwm_achievement_par = 0;
nosave int swwm_achievement_fuck = 0;
nosave int swwm_achievement_oneguy = 0;
nosave int swwm_achievement_golden = 0;
nosave int swwm_achievement_gib = 0;
nosave int swwm_achievement_barrier = 0;
nosave int swwm_achievement_bossdash = 0;
nosave int swwm_achievement_sneeze = 0;
nosave int swwm_achievement_fuel = 0;
nosave int swwm_achievement_slayer = 0;
nosave int swwm_achievement_broccolidoccoli = 0;
nosave int swwm_achievement_dime = 0;
nosave int swwm_achievement_stomp = 0;
nosave int swwm_achievement_cheat = 0;
nosave int swwm_achievement_god = 0;
nosave int swwm_achievement_thruwall = 0;
nosave int swwm_achievement_mashiro = 0;
nosave int swwm_achievement_lead = 0;
nosave int swwm_achievement_love = 0;
nosave int swwm_achievement_butts = 0;
nosave int swwm_achievement_plush = 0;
nosave int swwm_achievement_bustin = 0;
nosave int swwm_achievement_moth = 0;
nosave int swwm_achievement_iwad = 0;
nosave int swwm_achievement_brake = 0;
nosave int swwm_achievement_rage = 0;
nosave int swwm_achievement_abort = 0;
nosave int swwm_achievement_parry = 0;
nosave int swwm_achievement_allkills = 0;
nosave int swwm_achievement_allsecrets = 0;
nosave int swwm_achievement_reflect = 0;
nosave int swwm_achievement_sekiro = 0;
nosave int swwm_achievement_wave = 0;
nosave int swwm_achievement_friend = 0;
nosave int swwm_achievement_shock = 0;
nosave int swwm_achievement_balls = 0;
nosave int swwm_achievement_refresh = 0;
nosave int swwm_achievement_step = 0;
nosave int swwm_achievement_sunny = 0;
nosave int swwm_achievement_thicc = 0;
nosave int swwm_achievement_everything = 0;
nosave int swwm_achievement_allcoll = 0;
nosave int swwm_achievement_slemg = 0;
nosave int swwm_achievement_dosh = 0;
nosave int swwm_achievement_jump = 0;
nosave int swwm_achievement_ezkill = 0;
nosave int swwm_achievement_ligma = 0;
nosave int swwm_achievement_yeet = 0;
nosave int swwm_achievement_mbf = 0;
nosave int swwm_achievement_lightning = 0;
nosave int swwm_achievement_dakka = 0;
nosave int swwm_achievement_roast = 0;
nosave int swwm_achievement_dab = 0;
nosave int swwm_achievement_hnd = 0;
nosave int swwm_achievement_gepgun = 0;
nosave int swwm_achievement_fuller = 0;
nosave int swwm_achievement_pene = 0;
nosave int swwm_achievement_tetris = 0;
nosave int swwm_achievement_pong = 0;
nosave int swwm_achievement_snake = 0;
nosave int swwm_achievement_smb = 0;
nosave int swwm_achievement_tyrian = 0;
nosave int swwm_achievement_bof = 0;
// cross-session progress cvars (everything else is part of a static thinker)
nosave int swwm_progress_gcsandwich = 0;
nosave int swwm_progress_ghost = 0;
nosave int swwm_progress_allitems = 0;
nosave int swwm_progress_gravity = 0;
nosave int swwm_progress_par = 0;
nosave int swwm_progress_fuck = 0;
nosave int swwm_progress_golden = 0;
nosave int swwm_progress_gib = 0;
nosave int swwm_progress_barrier = 0;
nosave int swwm_progress_bossdash = 0;
nosave int swwm_progress_sneeze = 0;
nosave int swwm_progress_fuel = 0;
nosave int swwm_progress_slayer = 0;
nosave int swwm_progress_stomp = 0;
nosave int swwm_progress_thruwall = 0;
nosave int swwm_progress_love = 0;
nosave int swwm_progress_butts = 0;
nosave int swwm_progress_bustin = 0;
nosave int swwm_progress_moth = 0;
nosave int swwm_progress_iwad = 0;
nosave int swwm_progress_brake = 0;
nosave int swwm_progress_rage = 0;
nosave int swwm_progress_parry = 0;
nosave int swwm_progress_allkills = 0;
nosave int swwm_progress_allsecrets = 0;
nosave int swwm_progress_reflect = 0;
nosave int swwm_progress_wave = 0;
nosave int swwm_progress_friend = 0;
nosave int swwm_progress_shock = 0;
nosave int swwm_progress_balls = 0;
nosave int swwm_progress_refresh = 0;
nosave int swwm_progress_sunny = 0;
nosave int swwm_progress_thicc = 0;
nosave int swwm_progress_slemg = 0;
nosave int swwm_progress_jump = 0;
nosave int swwm_progress_roast = 0;
nosave int swwm_progress_dab = 0;
nosave int swwm_progress_gepgun = 0;
